-- create database db_gestor;
-- drop database db_gestor;

create table db_gestor.roles(
	id_rol int auto_increment primary key,
    nombre_rol varchar(15) not null
);
insert into db_gestor.roles(nombre_rol) values ('Administrador');
insert into db_gestor.roles(nombre_rol) values ('Empleado');

select * from db_gestor.roles;

create table db_gestor.estados(
	id_estado int auto_increment primary key,
    nombre_estado varchar(15) not null
);
insert into db_gestor.estados(nombre_estado) values ('Disponible');
insert into db_gestor.estados(nombre_estado) values ('No Disponible');

select * from db_gestor.estados;

create table db_gestor.usuarios(
	id_usuario int auto_increment primary key,
    nombre_usuario varchar(60) not null,
    correo_usuario varchar(60) not null,
    pass_usuario varchar(60) not null,
    id_rol int not null,
    id_estado int not null,
    FOREIGN KEY (id_rol) REFERENCES roles(id_rol),
    FOREIGN KEY (id_estado) REFERENCES estados(id_estado)
);
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Pablo Marmol','pablomarmol@apptask.com','@apptask123', '1', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Pedro Picapiedras','pedropiedra@apptask.com','@apptask123', '1', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Luis Garcia','lgarcia@apptask.com','@apptask123', '2', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Carlos Perez','perezcarlos@apptask.com','@apptask123', '2', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Paola Martinez','paomartinez@apptask.com','@apptask123', '2', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Karen Estrada','karenest@apptask.com','@apptask123', '2', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Lucas Aguirre','lucaguirre@apptask.com','@apptask123', '2', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Cesar Perez','perezcesar1@apptask.com','@apptask123', '2', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Diana Hernandez','dianaher@apptask.com','@apptask123', '1', '1');
insert into db_gestor.usuarios(nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado) values ('Jessi Barrios','jessibarrios1@apptask.com','@apptask123', '2', '1');


select * from db_gestor.usuarios;
SELECT nombre_usuario FROM db_gestor.usuarios WHERE correo_usuario='pablomarmol@apptask.com';
SELECT * FROM db_gestor.usuarios WHERE correo_usuario='pablomarmol@apptask.com' && pass_usuario='@apptask123';
      

create table db_gestor.turnos(
	id_turno int auto_increment primary key,
    nombre_turno varchar(15) not null
);
insert into db_gestor.turnos(nombre_turno) values ('Diurno');
insert into db_gestor.turnos(nombre_turno) values ('Nocturno');

select * from db_gestor.turnos;

 -- drop table db_gestor.horarios;
create table db_gestor.horarios(
	id_horario int auto_increment primary key,
    nombre_horario varchar(60) not null,
    descripcion varchar(60) not null,
    fecha_inicio date not null,
    fecha_fin date not null,
    id_turno int not null,
    FOREIGN KEY (id_turno) REFERENCES turnos(id_turno)
);
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 1','desarrollo de aplicacion contable','2024-04-25', '2024-05-10','1');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 2','desarrollo de aplicacion pdf','2024-04-25', '2024-05-05','2');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 3','desarrollo de aplicacion qr','2024-05-01', '2024-05-10','2');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 4','desarrollo de aplicacion web','2024-04-25', '2024-06-10','1');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 5','desarrollo de aplicacion movil','2024-04-25', '2024-06-05','2');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 6','desarrollo de backend app','2024-05-01', '2024-07-10','2');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 7','desarrollo de documentacion','2024-04-25', '2024-6-10','1');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 8','desarrollo de diagramas','2024-04-25', '2024-06-05','2');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 9','desarrollo de CU','2024-05-01', '2024-07-10','2');
insert into db_gestor.horarios(nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno) values ('Horario 10','pruebas de app','2024-04-25', '2024-07-10','1');

select * from db_gestor.horarios;

create table db_gestor.actividades(
	id_actividad int auto_increment primary key,
    nombre_actividad varchar(60) not null,
    descripcion varchar(60) not null,
    id_horario int not null,
    id_usuario int not null,
    FOREIGN KEY (id_horario) REFERENCES horarios(id_horario),
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);
insert into db_gestor.actividades(nombre_actividad, descripcion, id_horario, id_usuario) values ('desarrollo de login','creacion de login usuario','1', '1');
insert into db_gestor.actividades(nombre_actividad, descripcion, id_horario, id_usuario) values ('desarrollo de dashboard','creacion de dashboard usuario','2','2');
insert into db_gestor.actividades(nombre_actividad, descripcion, id_horario, id_usuario) values ('desarrollo de listas','creacion de listas','1','3');
insert into db_gestor.actividades(nombre_actividad, descripcion, id_horario, id_usuario) values ('pruebas funcionales','pruebas de login user','1', '4');
insert into db_gestor.actividades(nombre_actividad, descripcion, id_horario, id_usuario) values ('pruebas de carga','pruebas de login','2','6');
insert into db_gestor.actividades(nombre_actividad, descripcion, id_horario, id_usuario) values ('desarrollo de formulario','creacion de formularios','3','5');


select * from db_gestor.actividades;

-- bitacoras y triggers
CREATE TABLE db_gestor.bitacora_usuarios (
    id_bitacora INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    nombre_usuario VARCHAR(60),
    correo_usuario VARCHAR(60),
    pass_usuario VARCHAR(60),
    id_rol INT,
    id_estado INT,
    accion VARCHAR(10), -- 'UPDATE' o 'DELETE'
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);
select * from db_gestor.bitacora_usuarios;

CREATE TABLE db_gestor.bitacora_horarios (
    id_bitacora INT AUTO_INCREMENT PRIMARY KEY,
    id_horario INT,
    nombre_horario VARCHAR(60),
    descripcion VARCHAR(60),
    fecha_inicio DATE,
    fecha_fin DATE,
    id_turno INT,
    accion VARCHAR(10), -- 'UPDATE' o 'DELETE'
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_horario) REFERENCES horarios(id_horario)
);
select * from db_gestor.bitacora_horarios;

CREATE TABLE db_gestor.bitacora_actividades (
    id_bitacora INT AUTO_INCREMENT PRIMARY KEY,
    id_actividad INT,
    nombre_actividad VARCHAR(60),
    descripcion VARCHAR(60),
    id_horario INT,
    id_usuario INT,
    accion VARCHAR(10), -- 'UPDATE' o 'DELETE'
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_actividad) REFERENCES actividades(id_actividad)
);
select * from db_gestor.bitacora_actividades;


-- triggers---------------------------
-- Trigger para INSERT en usuarios
DELIMITER $$
CREATE TRIGGER db_gestor.trg_insert_usuarios 
AFTER INSERT ON db_gestor.usuarios
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_usuarios (id_usuario, nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado, accion)
    VALUES (NEW.id_usuario, NEW.nombre_usuario, NEW.correo_usuario, NEW.pass_usuario, NEW.id_rol, NEW.id_estado, 'INSERT');
END $$
DELIMITER ;

-- Trigger para UPDATE en usuarios
DELIMITER $$
CREATE TRIGGER db_gestor.trg_update_usuarios 
AFTER UPDATE ON db_gestor.usuarios
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_usuarios (id_usuario, nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado, accion)
    VALUES (NEW.id_usuario, NEW.nombre_usuario, NEW.correo_usuario, NEW.pass_usuario, NEW.id_rol, NEW.id_estado, 'UPDATE');
END $$
DELIMITER ;

-- Trigger para DELETE en usuarios
DELIMITER $$
CREATE TRIGGER db_gestor.trg_delete_usuarios 
AFTER DELETE ON db_gestor.usuarios
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_usuarios (id_usuario, nombre_usuario, correo_usuario, pass_usuario, id_rol, id_estado, accion)
    VALUES (OLD.id_usuario, OLD.nombre_usuario, OLD.correo_usuario, OLD.pass_usuario, OLD.id_rol, OLD.id_estado, 'DELETE');
END $$
DELIMITER ;



-- Trigger para INSERT en horarios
DELIMITER $$
CREATE TRIGGER db_gestor.trg_insert_horarios 
AFTER INSERT ON db_gestor.horarios
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_horarios (id_horario, nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno, accion)
    VALUES (NEW.id_horario, NEW.nombre_horario, NEW.descripcion, NEW.fecha_inicio, NEW.fecha_fin, NEW.id_turno, 'INSERT');
END $$
DELIMITER ;

-- Trigger para UPDATE en horarios
DELIMITER $$
CREATE TRIGGER db_gestor.trg_update_horarios 
AFTER UPDATE ON db_gestor.horarios
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_horarios (id_horario, nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno, accion)
    VALUES (NEW.id_horario, NEW.nombre_horario, NEW.descripcion, NEW.fecha_inicio, NEW.fecha_fin, NEW.id_turno, 'UPDATE');
END $$
DELIMITER ;

-- Trigger para DELETE en horarios
DELIMITER $$
CREATE TRIGGER db_gestor.trg_delete_horarios 
AFTER DELETE ON db_gestor.horarios
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_horarios (id_horario, nombre_horario, descripcion, fecha_inicio, fecha_fin, id_turno, accion)
    VALUES (OLD.id_horario, OLD.nombre_horario, OLD.descripcion, OLD.fecha_inicio, OLD.fecha_fin, OLD.id_turno, 'DELETE');
END $$
DELIMITER ;



-- Trigger para INSERT en actividades
DELIMITER $$
CREATE TRIGGER db_gestor.trg_insert_actividades 
AFTER INSERT ON db_gestor.actividades
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_actividades (id_actividad, nombre_actividad, descripcion, id_horario, id_usuario, accion)
    VALUES (NEW.id_actividad, NEW.nombre_actividad, NEW.descripcion, NEW.id_horario, NEW.id_usuario, 'INSERT');
END $$
DELIMITER ;

-- Trigger para UPDATE en actividades
DELIMITER $$
CREATE TRIGGER db_gestor.trg_update_actividades 
AFTER UPDATE ON db_gestor.actividades
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_actividades (id_actividad, nombre_actividad, descripcion, id_horario, id_usuario, accion)
    VALUES (NEW.id_actividad, NEW.nombre_actividad, NEW.descripcion, NEW.id_horario, NEW.id_usuario, 'UPDATE');
END $$
DELIMITER ;

-- Trigger para DELETE en actividades
DELIMITER $$
CREATE TRIGGER db_gestor.trg_delete_actividades 
AFTER DELETE ON db_gestor.actividades
FOR EACH ROW
BEGIN
    INSERT INTO db_gestor.bitacora_actividades (id_actividad, nombre_actividad, descripcion, id_horario, id_usuario, accion)
    VALUES (OLD.id_actividad, OLD.nombre_actividad, OLD.descripcion, OLD.id_horario, OLD.id_usuario, 'DELETE');
END $$
DELIMITER ;
